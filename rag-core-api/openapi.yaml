openapi: 3.0.2
info:
    title: RAG SIT x Stackit
    version: 1.0.0
    description: The perfect rag solution.
    contact: {}
servers:
    -
        url: /
paths:
    /evaluate:
        post:
            tags:
                - rag
            responses:
                '201':
                    description: Accepted.
                '500':
                    description: Internal Server Error.
            operationId: evaluate
    '/chat/{session_id}':
        summary: QNA or Rag Chat.
        post:
            requestBody:
                description: Chat with RAG.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/chat_request'
                required: true
            tags:
                - rag
            parameters:
                -
                    style: simple
                    explode: false
                    name: session_id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/chat_response'
                    description: OK.
                '500':
                    description: Internal Server Error!
            operationId: chat
    /information_pieces/remove:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/delete_request'
                required: true
            tags:
                - rag
            parameters:
                -
                    style: form
                    explode: true
                    name: collection_name
                    description: The collection information pieces will be deleted from.
                    schema:
                        type: string
                    in: query
                    required: false
            responses:
                '202':
                    description: Accepted.
                '404':
                    description: Ressource not Found
                '422':
                    description: ID or metadata missing.
                '500':
                    description: Internal Server Error.
            operationId: remove_information_piece
            summary: remove information piece
    /information_pieces/upload:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/information_piece'
                required: true
            tags:
                - rag
            parameters:
                -
                    style: form
                    explode: true
                    name: collection_name
                    description: The collection information pieces will be inserted in.
                    schema:
                        type: string
                    in: query
                    required: false
            responses:
                '201':
                    description: The file was successful uploaded.
                '422':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: Wrong json format.
                '500':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: Internal Server Error.
            operationId: upload_information_piece
            summary: Upload information pieces for vectordatabase
    /collection/switch:
        post:
            tags:
                - rag
            parameters:
                -
                    style: form
                    explode: true
                    name: source_collection_name
                    description: 'The source collection, from which the alias will be removed.'
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    style: form
                    explode: true
                    name: target_collection_name
                    description: The target collection the alias will be assigned to.
                    schema:
                        type: string
                    in: query
                    required: true
            responses:
                '200':
                    description: Collection alias has been successfully switched.
                '404':
                    description: Source or target collection not found.
                '500':
                    description: Internal server error.
            operationId: switch_collection
            summary: Switch production vectordatabase.
            description: 'Remove the production alias from source collection and add that alias to target collection '
    /collection/duplicate:
        post:
            tags:
                - rag
            responses:
                '201':
                    description: Duplication created successfully.
                '404':
                    description: No production collection found.
                '500':
                    description: Internal server error.
            operationId: duplicate_collection
            summary: Duplicates a vector database collection.
            description: Duplicates a vector database collection. It uses the production collection for duplication.
components:
    schemas:
        key_value_pair:
            title: key_value_pair
            description: The key value pair.
            required:
                - key
                - value
            type: object
            properties:
                key:
                    title: key
                    description: ''
                    type: string
                value:
                    title: value
                    description: '    '
                    type: string
            example:
                value: value
                key: key
        chat_history:
            title: chat_history
            description: ''
            required:
                - messages
            type: object
            properties:
                messages:
                    title: messages
                    type: array
                    items:
                        $ref: '#/components/schemas/chat_history_message'
        chat_role:
            title: chat_role
            description: ''
            enum:
                - user
                - assistant
            type: string
        chat_history_message:
            title: chat_history_message
            description: ''
            required:
                - message
                - role
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/chat_role'
                message:
                    title: message
                    description: ''
                    type: string
        content_type:
            title: content_type
            description: ''
            enum:
                - TEXT
                - IMAGE
                - TABLE
                - SUMMARY
            type: string
        delete_request:
            title: file_request
            description: ''
            type: object
            properties:
                metadata:
                    title: metadata
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/key_value_pair'
        chat_request:
            title: chat_request
            description: ''
            required:
                - message
            type: object
            properties:
                history:
                    $ref: '#/components/schemas/chat_history'
                message:
                    title: message
                    description: ''
                    type: string
        chat_response:
            title: chat_response
            description: ''
            required:
                - answer
                - citations
                - finish_reason
            type: object
            properties:
                answer:
                    title: answer
                    description: ''
                    type: string
                finish_reason:
                    title: finish_reason
                    description: '    '
                    type: string
                citations:
                    title: citations
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/information_piece'
            example:
                finish_reason: finish_reason
                citations:
                    -
                        metadata:
                            -
                                value: value
                                key: key
                            -
                                value: value
                                key: key
                        content: content
                    -
                        metadata:
                            -
                                value: value
                                key: key
                            -
                                value: value
                                key: key
                        content: content
                answer: answer
        information_piece:
            title: file
            description: Uploading a json with chunks and metadata.
            required:
                - metadata
                - page_content
                - type
            type: object
            properties:
                metadata:
                    title: metadata
                    description: The metadata of the documents that are stored in the vectordatabase.
                    type: array
                    items:
                        $ref: '#/components/schemas/key_value_pair'
                page_content:
                    title: content
                    description: The content of the document
                    type: string
                type:
                    $ref: '#/components/schemas/content_type'
            example:
                metadata:
                    -
                        key: key
                        value: value
                    -
                        key: key
                        value: value
                page_content: some text
                type: TEXT
